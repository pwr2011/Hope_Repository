#include<iostream>
#include<cmath>
#define ll long long
#define MOD 1'000'000'000
using namespace std;

ll mul[100][2][2];
ll A[2][2];
ll B[2][2];

void init() {
	mul[0][0][0] = 1;
	mul[0][0][1] = 1;
	mul[0][1][0] = 1;
	mul[0][1][1] = 0;
	A[0][0] = 1;
	A[1][1] = 1;
	B[0][0] = 1;
	B[1][1] = 1;

	for (int i = 1; i < 100; i++) {
		for (int col = 0; col < 2; col++) {
			for (int row = 0; row < 2; row++) {
				ll val = 0;
				for (int idx = 0; idx < 2; idx++) {
					val += (mul[i - 1][col][idx] * mul[i - 1][idx][row])%MOD;
					val %= MOD;
				}
				mul[i][col][row] = val;
			}
		}
	}
}

void matrix_mul(int idx, int m) {
	ll tmp[2][2] = { 0, };
	if (m == 0) {//B에 곱해
		for (int col = 0; col < 2; col++) {
			for (int row = 0; row < 2; row++) {
				ll val = 0;
				for (int i = 0; i < 2; i++) {
					val += (B[col][i] * mul[idx][i][row]) % MOD;
					val %= MOD;
				}
				tmp[col][row] = val;
			}
		}
		B[0][0] = tmp[0][0];
		B[0][1] = tmp[0][1];
		B[1][0] = tmp[1][0];
		B[1][1] = tmp[1][1];
	}
	else {
		for (int col = 0; col < 2; col++) {
			for (int row = 0; row < 2; row++) {
				ll val = 0;
				for (int i = 0; i < 2; i++) {
					val += (A[col][i] * mul[idx][i][row]) % MOD;
					val %= MOD;
				}
				tmp[col][row] = val;
			}
		}
		A[0][0] = tmp[0][0];
		A[0][1] = tmp[0][1];
		A[1][0] = tmp[1][0];
		A[1][1] = tmp[1][1];
	}
}

int main() {
	init();

	ll a, b;
	cin >> a >> b;
	b += 1;

	while (b != 0) {
		ll i = (ll)floor(log2(b));
		matrix_mul(i, 0);
		b -= (ll)pow(2, i);
	}

	while (a != 0) {
		ll i = (ll)floor(log2(a));
		matrix_mul(i, 1);
		a -= (ll)pow(2, i);
	}
	cout << (B[1][0] + B[1][1] - (A[1][0] + A[1][1]) + MOD) % MOD;
}
