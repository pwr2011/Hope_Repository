#include<iostream>
#define MOD 1'000'000
using namespace std;

int dp[105][105][2]; //0 : 하강 1 : 상승 차례

int solve(int d,int u, int order) {
	if (dp[d][u][order] != -1) return dp[d][u][order];
	if (d == 0 && u == 0) {
		return dp[d][u][order] = 1;
	}
	if ((order == 0 && d == 0) || (order == 1 && u == 0)) return dp[d][u][order] = 0;

	int remain = d + u;
	int ans = 0;
	if (order == 1) {
		for (int i = d+1; i <= remain; i++) {
			ans += solve(i-1, remain - i, 0);
			ans %= MOD;
		}
	}
	else {
		for (int i = 1; i <= d; i++) {
			ans += solve(i-1, remain - i, 1);
			ans %= MOD;
		}
	}
	dp[d][u][order] = ans;
	return ans;
}

int main() {
	for (int i = 0; i < 105; i++) {
		for (int j = 0; j < 105; j++) {
			dp[i][j][0] = -1;
			dp[i][j][1] = -1;
		}
	}

	int ans = 0;
	int N; cin >> N;
	if (N == 1) {
		cout << 1; return 0;
	}
	for (int i = 1; i <= N; i++) {
		for (int j = 1; j <= N; j++) {
			if (i == j) continue;
			if (i > j) {
				ans += solve(j - 1, N - j - 1, 1) % MOD;
				ans %= MOD;
			}
			else {
				ans += solve(j-2, N - j, 0) % MOD;
				ans %= MOD;
			}
		}
	}
	cout << ans;
}
