#include<iostream>
using namespace std;

int arr[10'005];
int map[1000][500];
int dx[] = { 0,-1,-1,0,1,1 };
int dy[] = { -2,-1,1,2,1,-1 };
int sx = 150;
int sy = 300;
int level = 1;
bool adj[6];
int cnt = 1;
int num[] = { 0,1,0,0,0,0 };

void check() {
	for (int i = 1; i <= 5; i++) adj[i] = false;

	for (int i = 0; i < 6; i++) {
		int x = sx + dx[i];
		int y = sy + dy[i];
		if (map[y][x] != 0) {
			adj[map[y][x]] = 1;
		}
	}
	int idx = 0;
	int size = 100000;
	for (int i = 1; i <= 5; i++) {
		if (!adj[i]) {
			if (size > num[i]) {
				idx = i;
				size = num[i];
			}
		}
	}
	arr[++cnt] = idx;
	map[sy][sx] = idx;
	num[idx]++;
}

void solve() {
	while (level < 61) {
		sx += 1;
		sy -= 1;
		check();
		if (cnt > 10'000) break;

		for (int i = 0; i < level - 1; i++) {
			sx += dx[0];
			sy += dy[0];
			check();
			if (cnt > 10'000) break;
		}

		for (int i = 1; i < 6; i++) {
			for (int j = 0; j < level; j++) {
				sy += dy[i];
				sx += dx[i];
				check();
				if (cnt > 10'000) break;
			}
		}

		if (cnt > 10'000)break;
		level++;
	}
}

int main() {
	int C; cin >> C;
	map[sy][sx] = 1;
	arr[1] = 1;
	solve();
	while (C--) {
		int N; cin >> N;
		cout << arr[N] << "\n";
	}
}
