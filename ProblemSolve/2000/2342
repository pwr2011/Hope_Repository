#include<iostream>
#include<vector>
#include<algorithm>
using namespace std;

vector<int> input;
int dp[100'005][26];

int conv(int l, int r) {
	return l * 5 + r;
}

int inc(int i) {
	i++;
	if (i == 5) {
		i = 1;
	}
	return i;
}

int dec(int i) {
	i--;
	if (i == 0) i = 4;
	return i;
}

int cal(int idx, int l, int r) {
	int c = conv(l, r);
	if (dp[idx][c] != -1) return dp[idx][c];
	if (l == r && idx != 0) {
		return dp[idx][c] = 98'765'432;
	}
	if (idx >= input.size()) {
		return dp[idx][c] = 0;
	}
	int next = input[idx];
	int move_left;
	int move_right;
	if (l == next) move_left = 1;
	else if (l == 0) move_left = 2;
	else if (inc(l) == next || dec(l) == next) {
		move_left = 3;
	}
	else move_left = 4;
	if (r == next) move_right = 1;
	else if (r == 0) move_right = 2;
	else if (inc(r) == next || dec(r) == next) {
		move_right = 3;
	}
	else move_right = 4;
	return dp[idx][c] = min(cal(idx + 1, next, r)+move_left, cal(idx + 1, l, next)+move_right);
}

int main() {
	for (int i = 0; i < 100'005; i++) {
		for (int j = 0; j < 26; j++) {
			dp[i][j] = -1;
		}
	}
	int tmp = 1;
	while (tmp != 0) {
		cin >> tmp;
		input.push_back(tmp);
	}
	input.pop_back();

	cout<<cal(0, 0, 0);
}
