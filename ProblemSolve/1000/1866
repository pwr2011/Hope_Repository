#include<iostream>
#include<algorithm>
using namespace std;

int H, T;
int box[3'005];
int psum[3'005];
int dp[3'005];

int solve(int idx) {
	if (idx == 0) return 0;
	if (dp[idx] != -1) return dp[idx];

	int ret = solve(idx - 1) + box[idx] * T;

	for (int i = 1; i <= idx; i++) {
		int mid = (idx + i) / 2;
		int left = box[mid] * (mid - i + 1) - (psum[mid] - psum[i - 1]);
		int right = (psum[idx] - psum[mid - 1]) - box[mid] * (idx - mid + 1);
		int s = (left + right) * T + H;
		ret = min(ret, s + solve(i - 1));
	}
	return dp[idx] = ret;
}

int main() {
	for (int n = 0; n < 3'005; n++) {
		dp[n] = -1;
	}
	int N; cin >> N;
	for (int n = 1; n <= N; n++) {
		cin >> box[n];
	}
	cin >> T >> H;
	sort(box + 1, box + 1 + N);
	for (int n = 1; n <= N; n++) {
		psum[n] = psum[n - 1] + box[n];
	}

	cout<<solve(N);
}
