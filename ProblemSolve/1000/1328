#include<iostream>
#define MOD 1'000'000'007
#define ll long long

using namespace std;

ll dp[105][105][105];
ll N, L, R;

ll solve(ll n, ll l, ll r) {
	if (dp[n][l][r] != -1) return dp[n][l][r];

	if (l + r - 1 > n) {
		return dp[n][l][r] = 0;
	}

	if (l == 1 && r == 1) {
		if (n == 1) {
			return dp[n][l][r] = 1;
		}
		else {
			return dp[n][l][r] = 0;
		}
	}

	ll ans = 0;
	if (l > 1) {
		ans += solve(n - 1, l - 1, r) % MOD;
		ans %= MOD;
	}
	if (r > 1) {
		ans += solve(n - 1, l, r - 1) % MOD;
		ans %= MOD;
	}

	ans += (solve(n - 1, l, r) * (n - 2)) % MOD;
	ans %= MOD;

	return dp[n][l][r] = ans;
}

int main() {
	for (int i = 0; i < 105; i++) {
		for (int j = 0; j < 105; j++) {
			for (int k = 0; k < 105; k++) {
				dp[i][j][k] = -1;
			}
		}
	}
	cin >> N >> L >> R;

	cout<<solve(N, L, R);
}
