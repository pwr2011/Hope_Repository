#include<iostream>
#include<string.h>
#include<algorithm>
#include<cmath>
#define INF 87'654'321
#define SIZE 520
using namespace std;
typedef pair<int, int> P;

P input[SIZE];
int N;
double dp[SIZE][SIZE];

double dist(P a, P b) {
	return sqrt(pow(a.first - b.first, 2) + pow(a.second - b.second, 2));
}


double cal(int a, int b) {
	if (dp[a][b] != INF) return dp[a][b];
	int idx = max(a, b) + 1;
	if (idx == N - 1) {
		return dp[a][b] = dist(input[a], input[N - 1] ) + dist(input[b], input[N - 1]);
	}

	double ans = dist(input[a], input[idx]) + cal(idx, b);

	ans = min(ans, dist(input[b], input[idx]) + cal(a, idx));

	return dp[a][b] = ans;
}

void solve() {
	cin >> N;
	for (int n = 0; n < N; n++) {
		cin >> input[n].first >> input[n].second;
	}
	cout.precision(15);
	cout << cal(0,0)<<"\n";
}

int main() {
	cin.tie(NULL);
	ios::sync_with_stdio(false);
	int T; cin >> T;
	while (T--) {
		for (int i = 0; i < SIZE; i++) { //memset?
			for (int j = 0; j < SIZE; j++) {
				dp[i][j] = INF;
			}
		}
		solve();
	}
}
