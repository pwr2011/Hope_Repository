#include<iostream>
#include<algorithm>
#define MIN_V -40005
using namespace std;

int N;
int dp[402][402][402];
int input[2][402];
int len[2];

int solve(int i, int j, int idx) {
	if (i == len[0] || j == len[1]) return 0;
	if (dp[i][j][idx] != MIN_V) return dp[i][j][idx];

	int ans = MIN_V;
	if (N - len[0] - (idx - i) > 0) ans = max(ans, solve(i, j + 1, idx + 1));
	if (N - len[1] - (idx - j) > 0) ans = max(ans, solve(i + 1, j, idx + 1));

	ans = max(ans, input[0][i] * input[1][j] + solve(i + 1, j + 1, idx + 1));
	return dp[i][j][idx] = ans;
}

int main() {
	cin.tie(NULL);
	ios::sync_with_stdio(false);
	cin >> N;
	for (int i = 0; i < 2; i++) {
		for (int n = 0; n < N; n++) {
			cin >> input[i][len[i]];
			if (input[i][len[i]]!=0) len[i]++;
		}
	}

	for (int i = 0; i < 402; i++) {
		for (int j = 0; j < 402; j++) {
			for (int k = 0; k < 402; k++) dp[i][j][k] = MIN_V;
		}
	}
	cout<<solve(0, 0, 0);
}
