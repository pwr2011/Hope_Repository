#include<iostream>
#include<bitset>
#include<vector>
#include<cmath>
#define ll long long
using namespace std;

bool dp[1 << 23];
string in_change[22];
bitset<105> change[22];
bool check[205];
ll res[205];
ll N, M;
ll end_num;

void cal(bitset<105> status, ll year,ll pushed) {
	if (dp[pushed]) return;
	else {
		dp[pushed] = true;
		res[year+N]= pushed;
		check[year + N] = true;
		if (pushed == end_num) return;
		for (int m = 0; m < M; m++) {
			if (( ((ll)1 << m) & pushed) == 0) {
				bitset<105> tmp = status;
				tmp ^= change[m];
				cal(tmp, tmp.count() - (N-tmp.count()), ((ll)1 << m) | pushed);
			}
		}
	}
}

int main()
{
	bitset<105> init;
	string in_init;
	ll init_year = 0;
	cin >> N >> M;
	cin >> in_init;
	end_num = pow(2, M) - 1;
	for (int m = 0; m < M; m++) {
		cin >> in_change[m];
	}
	for (int i = 0; i < N; i++) {
		if (in_init[i] == '0') {
			init.set(i, 0);
			init_year--;
		}
		else {
			init.set(i, 1);
			init_year++;
		}
	}
	for (int m = 0; m < M; m++) {
		for (int i = 0; i < N; i++) {
			if (in_change[m][i] == '0') {
				change[m].set(i, 0);
			}
			else {
				change[m].set(i, 1);
			}
		}
	}
	cal(init,init_year,0);
	for (int n = 0; n <= 2 * N; n++) {
		if (check[n]) {
			vector<ll> arr;
			for (int i = 0; i < M; i++) {
				if (((ll)1 << i & res[n]) != 0) {
					arr.push_back(i+(ll)1);
				}
			}
			cout << arr.size() << " ";
			for (ll cur : arr) {
				cout << cur << " ";
			}
			cout << endl;
		}
		else { cout << "-1\n"; }
	}
}
