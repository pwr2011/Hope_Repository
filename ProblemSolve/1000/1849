#include<iostream>
#include<cmath>
using namespace std;

int ans[100'005];
int input[100'005];
int arr[400'000];
int start;

int sum(int idx, int node = 1, int nodeL=0, int nodeR=start-1) {
	int left = arr[node * 2];
	int mid = (nodeL + nodeR) / 2;
	if (node >= start) return node - start;
	if (left < idx) {
		return sum(idx - left, node * 2 + 1, mid + 1, nodeR);
	}
	else {
		return sum(idx, node * 2, nodeL, mid);
	}
}

void update(int i) {
	int idx = i + start;
	arr[idx]--;
	idx /= 2;
	while (idx > 0) {
		arr[idx] = arr[idx * 2] + arr[idx * 2 + 1];
		idx /= 2;
	}
}

int main() {
	cin.tie(NULL); ios::sync_with_stdio(false);
	cout.tie(NULL);
	int N; cin >> N;
	start = pow(2, ceil(log2(N)));
	for (int n = 0; n < N; n++) {
		cin >> input[n];
	}

	for (int i = start; i < start + N; i++) {
		arr[i] = 1;
	}
	int i = start - 1;
	while (i > 0) {
		arr[i] = arr[i * 2] + arr[i * 2 + 1];
		i--;
	}

	for (int n = 0; n < N; n++) {
		int idx = sum(input[n] + 1);
		ans[idx] = (n + 1);
		update(idx);
	}
	for (int n = 0; n < N; n++) {
		cout << ans[n] << "\n";
	}
}
