#include<iostream>
#include<algorithm>
#define MAX 1e8
#define ll long long
using namespace std;

ll N, M;
ll dp[110][100];
bool day[110];

ll cal(ll start, ll coupon) {
	if (start > N) return 0;
	if (dp[start][coupon] != -1) return dp[start][coupon];

	while (day[start] == false) { return cal(start + 1, coupon); }

	ll res = 0;
	if ((100 - start + 1) * 3 <= coupon) {
		res = 0;
	}
	else {

		res = cal(start + 3, coupon + 1) + 25000;
		res = min(res, cal(start + 1, coupon) + 10000);
		res = min(res, cal(start + 5, coupon + 2) + 37000);
		if (coupon >= 3) {
			res = min(res, cal(start + 1, coupon - 3));
		}
	}
	dp[start][coupon] = res;
	return res;
}

int main() {
	cin >> N >> M;
	for (ll n = 0; n < 110; n++) {
		day[n] = true;
		for (ll i = 0; i < 100; i++) {
			dp[n][i] = -1;
		}
	}
	for (ll m = 0; m < M; m++) {
		ll num; cin >> num; day[num] = false;
	}

	cout<<cal(1, 0);
}
