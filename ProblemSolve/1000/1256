#include<iostream>
#include<string>
#include<algorithm>
using namespace std;

int N, M, K;
int dp[105][105];
string answer;

int cal(int n, int m) {
	if (dp[n][m] != 0) return dp[n][m];
	if (n == 0 || m == 0) return dp[n][m] = 1;
	return dp[n][m] = min(cal(n - 1, m) + cal(n, m - 1),1'000'000'001);
}

void find(int n, int m, int k) {
	if (n == 0) {
		for (int i = 0; i < m; i++) {
			answer.push_back('z');
		}
		return;
	}
	else if (m == 0) {
		for (int i = 0; i < n; i++) {
			answer.push_back('a');
		}
		return;
	}
	if (dp[n - 1][m] >= k) {
		answer.push_back('a');
		find(n - 1, m, k);
	}
	else {
		answer.push_back('z');
		find(n, m - 1, k - dp[n - 1][m]);
	}
}

int main() {
	cin >> N >> M >> K;
	if (cal(N, M) < K) {
		cout << "-1";
		return 0;
	}
	find(N, M, K);
	cout << answer;
}
