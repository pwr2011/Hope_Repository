#include<iostream>
#include<string>
#include<vector>
using namespace std;

int main() {
	cin.tie(NULL);
	ios::sync_with_stdio(false);

	int T; cin >> T;
	while (T--) {
		string A, pat, S;
		vector<int> res;
		cin >> A >> pat >> S;
		A.push_back(A[0]);

		char next[130] = { 0, };
		for (int a = 0; a < A.size()-1; a++) {
			next[A[a]] = A[a + 1];
		}

		for (int idx = 0; idx < A.size()-1; idx++) {

			int fail[50'005] = { 0, };
			for (int i = 1, j = 0; i < pat.size(); i++) {
				while (j > 0 && pat[i] != pat[j]) j = fail[j - 1];
				if (pat[i] == pat[j]) fail[i] = ++j;
			}
			int cnt = 0;
			for (int i = 0, j = 0; i < S.size(); i++) {
				while (j > 0 && S[i] != pat[j]) j = fail[j - 1];
				if (S[i] == pat[j]) {
					if (j == pat.size() - 1) {
						cnt++;
						j = fail[j];
					}
					else {
						j++;
					}
				}
			}

			if (cnt == 1) {
				res.push_back(idx);
			}
			for (int p = 0; p < pat.size(); p++) {
				pat[p] = next[pat[p]];
			}
		}

		if (res.size() == 0) {
			cout << "no solution\n";
		}
		else if (res.size() == 1) {
			cout << "unique: " << res[0] << "\n";
		}
		else {
			cout << "ambiguous: ";
			for (int c : res) {
				cout << c << " ";
			}
			cout << "\n";
		}
	}
}
