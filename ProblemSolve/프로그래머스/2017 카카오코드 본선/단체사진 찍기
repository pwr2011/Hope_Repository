#include <string>
#include <vector>
#include <algorithm>
#include<cmath>
using namespace std;

vector<char> arr = { 'A','C','F','J','M','N','R','T' };
int pos[30];

int solution(int n, vector<string> data) {
    int answer = 0;
    for (int i = 0; i < 40'320; i++) {
        bool flag = true;
        for (int i = 0; i < 8; i++) {
            pos[arr[i] - 'A'] = i;
        }
        for (string c : data) {
            int p1_pos = pos[c[0] - 'A'];
            int p2_pos = pos[c[2] - 'A'];
            int real_dist = abs(p2_pos - p1_pos);
            char eq = c[3];
            int dist = c[4] - '0';
            if (eq == '<') {
                if (dist <= real_dist) {
                    flag = false; break;
                }
            }
            else if (eq == '>') {
                if (dist >= real_dist) {
                    flag = false; break;
                }
            }
            else {
                if (dist != real_dist) {
                    flag = false; break;
                }
            }
        }
        if (flag) answer++;
        next_permutation(arr.begin(), arr.end());
    }
    return answer;
}
